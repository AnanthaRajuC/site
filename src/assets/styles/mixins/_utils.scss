@use '../variables';
@use '../properties';
@use 'queries';
@use '../../../../node_modules/@microflash/remarkability/scss/mixins';

// Heading font

@mixin heading-font() {
  @include mixins.font('distinct');
  font-feature-settings: 'ss04' 1, 'case' 1, 'zero' 1;
  line-height: 1.2;
}

// Visibility

@mixin hide($hidden: true, $display-fallback: unset) {
  @if $hidden {
    visibility: hidden;
    display: none;
  } @else {
    visibility: visible;
    display: $display-fallback;
  }
}

// Set dimensions

@mixin size($width, $height: $width) {
  height: $height;
  width: $width;
}

// Padding and Margin utilities

@mixin px($value) {
  padding-right: $value;
  padding-left: $value;
  padding-inline: $value;
}

@mixin py($value) {
  padding-top: $value;
  padding-bottom: $value;
  padding-block: $value;
}

@mixin mx($value) {
  margin-right: $value;
  margin-left: $value;
  margin-inline: $value;
}

@mixin my($value) {
  margin-top: $value;
  margin-bottom: $value;
  margin-block: $value;
}

// Tappable

$tappable-radius: variables.$radius * 6;
$tappable-gapx: variables.$gap-rg;
$tappable-gapy: variables.$gap-xs;
$tappable-background: variables.$bg-selected;

@mixin tappable(
  $radius: $tappable-radius, 
  $gapx: $tappable-gapx, 
  $gapy: $tappable-gapy, 
  $background: $tappable-background,
  $underline: false
) {
  border-radius: $radius;
  padding: $gapy $gapx;

  &.is-icon {
    padding: $gapy;
  }

  &:focus,
  &:hover {
    background-color: $background;
    text-decoration: none;

    @if $underline {
      a {
        text-decoration: underline;
      }
    }
  }
}

// Separator

@mixin separator() {
  content: variables.$symbol-separator;
  @include mx(variables.$separator-gap);
  opacity: variables.$separator-opacity;
}
