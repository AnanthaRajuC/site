@use '../variables';
@use '../properties';
@use './queries';
@use './layout';

// Grid mixin
// generates a grid with cells of specified width

@mixin grid($width, $height: 100%, $gap: properties.$space-sm, $strategy: auto-fill, $responsive: true) {
  display: flex;
  flex-wrap: wrap;

  display: grid;
  grid-gap: $gap;
  grid-template-columns: repeat($strategy, minmax($width, 1fr));
  grid-auto-rows: minmax(max-content, auto);

  @if $responsive {
    @include queries.sm {
      grid-template-columns: none;
    }
  }

  > * {
    flex: 1 1 $width;
    @include layout.margin-inline($gap);
    min-height: $height;
  }

  @supports (display: grid) {
    & > * {
      @include layout.margin-inline(0);
    }
  }
}

.grid-xs {
  @include grid($width: variables.$grid-xs, $responsive: false);
}

.grid-sm {
  @include grid($width: variables.$grid-sm);
}

.grid-rg {
  @include grid($width: variables.$grid-rg, $strategy: auto-fit);
}
