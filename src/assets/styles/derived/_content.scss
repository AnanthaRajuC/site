@use '~/assets/styles/variables';
@use '~/assets/styles/mixins/utils';

// Content

$content-gap: var(--space-md);
$content-adm-gap: var(--space-rg);
$content-article-gap: var(--content-article-gap);
$content-list-gap: var(--content-list-gap);
$content-max-width: variables.$max-width-rg;
$content-opener-size: variables.$font-md;

.content {
  @include utils.my($content-gap);

  .article {
    > p:first-of-type {
      font-size: $content-opener-size;
    }

    > p,
    > dl,
    > table,
    > h1,
    > h2,
    > h3,
    > h4,
    > h5,
    > h6 {
      max-width: $content-max-width;
      @include utils.mx(auto);
      @include utils.px($content-article-gap);
    }

    > ol,
    > ul {
      max-width: $content-max-width;
      @include utils.mx(auto);
      @include utils.px($content-list-gap);
    }

    div[class$='-embed'] {
      @include utils.my($content-adm-gap);
    }

    .prominent-list {
      div:not(:last-child) {
        margin-bottom: variables.$gap-lg;
      }
    }
  }
}

// Table of contents

$toc-body-font-size: variables.$font-sm;
$toc-body-gap-inline: variables.$gap-rg;

.toc {
  max-width: $content-max-width;
  @include utils.mx(auto);
  margin-bottom: $content-adm-gap;
  font-size: 0.9em;

  &-body {
    list-style-type: none;
    margin-left: 0;
    @include utils.px($content-article-gap);

    li:last-child {
      margin-bottom: 0;
    }

    li {
      $toc-margin: $toc-body-gap-inline;
      $levels: 3 4 5 6;
  
      @each $level in $levels {
        .toc-item-#{$level} {
          margin-left: $toc-margin * ($level - 2);
        }
      }
    }
  }
}

// Reference links

h1, 
h2, 
h3, 
h4, 
h5, 
h6 {
  @include utils.heading-font;
  
  &:focus a .reference,
  &:hover a .reference {
    @include utils.hide(false);
    display: inline-block;
    width: 1.25ch;
    margin-left: -1.25ch;

    &::after {
      content: variables.$symbol-reference-link;
      outline: none;
    }
  }
}

// Admonitions & blockquotes

$adm-default-background: var(--bg-active);
$adm-default-color: var(--text-passive);
$adm-note-background: var(--bg-active);
$adm-note-color: var(--text-passive);
$adm-caution-background: var(--bg-caution);
$adm-caution-color: var(--text);
$adm-tip-background: var(--bg-tip);
$adm-tip-color: var(--text);
$adm-warning-background: var(--bg-warning);
$adm-warning-color: var(--text);
$adm-important-background: var(--bg-warning);
$adm-important-color: var(--text);

$adm-font-size: 0.9em;
$adm-header-gap-bottom: variables.$gap-md;

.admonition, blockquote {
  @include utils.my($content-adm-gap);
  padding: $content-adm-gap;
  font-size: $adm-font-size;

  > * {
    max-width: $content-max-width;
    @include utils.mx(auto);
  }

  h5 {
    display: flex;
    align-items: center;
    margin-bottom: $adm-header-gap-bottom;
    text-transform: capitalize;
  }

  code {
    overflow-wrap: break-word;
  }
}

.admonition-icon {
  margin-right: variables.$ch-rg;

  svg {
    @include utils.size(22px);
    stroke-width: 0;
  }
}

@mixin admonition($background: $adm-default-background, $foreground: $adm-default-color) {
  background-color: $background;
  
  h5 {
    color: $foreground;
  }

  .admonition-icon svg {
    stroke: $foreground;
    fill: $foreground;
  }
}

.admonition {
  @include admonition;
}

.admonition-caution {
  @include admonition($adm-caution-background, $adm-caution-color);
}

.admonition-tip {
  @include admonition($adm-tip-background, $adm-tip-color);
}

.admonition-warning {
  @include admonition($adm-warning-background, $adm-warning-color);
}

.admonition-important {
  @include admonition($adm-important-background, $adm-important-color);
}

.admonition-note, blockquote {
  @include admonition($adm-note-background, $adm-note-color);
}

blockquote {
  strong:first-of-type {
    display: flex;
    align-items: center;
    text-transform: capitalize;
    margin-bottom: variables.$gap-sm;
  }

  ul,
  ol {
    padding-left: variables.$gap-md;
  }
}
