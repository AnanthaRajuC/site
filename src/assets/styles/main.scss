@charset 'UTF-8';

@use 'reset';
@use 'core/colors';
@use 'core/fonts';
@use 'core/variables';
@use 'core/motion';
@use 'helpers/queries';
@use 'helpers/layouts';
@use 'helpers/mixins';
@use '../../../node_modules/@microflash/remarkability/scss/remarkability.global.scss';
@use 'extensions';
@use 'syntax';

// Layout

.layout {
  display: flex;
  flex-wrap: wrap;

  & > * {
    flex-grow: 1;
  }

  display: grid;
  grid-template-columns: 2fr 3fr;
}

@media screen and (min-width: variables.$breakpoint-md) {
  .search,
  .hero-content,
  .content,
  .article,
  .sidekick,
  .footer {
    flex-basis: 50%;
  }

  .logo,
  .menu,
  .hero-media,
  .sidebar-start {
    flex-basis: 25%;
  }

  .hero-content,
  .article {
    margin-right: 25% !important;
  }

  .content,
  .sidekick {
    margin-right: 25% !important;
    margin-left: 25% !important;
  }

  .layout {
    grid-template-columns: 1fr 2fr 1fr;
  }

  .hero-media,
  .sidebar-start {
    grid-column: 1 / 2;
  }

  .hero-content,
  .content,
  .article,
  .sidekick {
    grid-column: 2 / 3;
  }

  .footer {
    grid-column: 1 / -1;
  }
}

@media screen and (max-width: (variables.$breakpoint-md - 1)) {
  .logo {
    order: -2;
    flex-basis: 40%;
  }
  
  .menu {
    order: -1;
    flex-basis: 60%;
    text-align: right;
  }
  
  .search,
  .hero-media,
  .hero-content,
  .content,
  .sidebar-start,
  .article,
  .sidekick,
  .footer {
    flex-basis: 100%;
    grid-column: 1 / -1;
  }
}

// reset flexbox if grid is supported
@supports (display: grid) {
  .layout > * {
    flex-basis: auto;
  }
  
  .hero-content,
  .article {
    margin-right: 0 !important;
  }
  
  .content,
  .sidekick {
    margin-right: 0 !important;
    margin-left: 0 !important;
  }
}

// Foundational container

.container {
  flex-grow: 1;
  position: relative;
  width: auto;
  padding: variables.$expanse-md;
}

// Logo

.logo {
  @include layouts.flex($justify: flex-start);
  @include layouts.vspace(variables.$expanse-md);
  padding-left: variables.$expanse-md;
  background-color: variables.$background-pronounced;

  .brand {
    line-height: 0;
    width: calc(10rem + 4vw);
  }
}

// Search

.search {
  @include layouts.flex($justify: flex-start);
  @include layouts.vspace(variables.$expanse-md);
  background-color: variables.$background-pronounced;
  font-size: variables.$font-size-sm;

  @include queries.within-tab-landscape {
    margin-top: -1rem;
    padding-top: 0;
    @include layouts.hspace(variables.$expanse-md);
  }
}

.search-container {
  position: relative;

  @include queries.within-tab-landscape {
    width: 100%;
    margin-top: variables.$gap;
  }
}

.search-box, .results-container {
  display: flex;
  background-color: variables.$background-muted;
  border-radius: variables.$radius;
  width: 50vw;
  
  @include queries.within-tab-landscape {
    width: 100%;
  }
}

.search-box {
  position: relative;
  align-items: center;
  @include layouts.vspace(variables.$gap-xs);
  @include layouts.hspace(variables.$gap-rg);
  border: 1.5px solid variables.$border;

  .search-input {
    outline: none;
    border: none;
    flex: 1;
  }

  .icon-search,
  .icon-clear {
    color: variables.$link;
  }

  &:focus,
  &:hover {
    border-color: variables.$border-active;

    .icon-search,
    .icon-clear {
      color: variables.$link-hover;
    }
  }
}

.results-container {
  position: absolute;
  overflow: hidden;
  border: 1.5px solid variables.$border-active;
  max-height: 75vh;
  z-index: 5;
}

.search-results {
  display: flex;
  flex-direction: column;
  overflow: auto;
  width: inherit;

  .search-result {
    cursor: pointer;
    text-decoration: none;
    border-top: 1px solid variables.$border;
    padding: variables.$gap-rg;
  }

  .search-result-title,
  .search-result-excerpt {
    display: inline-block;
  }

  .results-label {
    @include layouts.hspace(variables.$gap-rg);
    @include layouts.vspace(variables.$gap-xs);
    color: variables.$text-muted;
  }

  .search-result-title {
    color: variables.$text;
  }

  .search-result-excerpt {
    font-size: variables.$font-size-sm;
    color: variables.$text-muted;
  }

  .search-result:focus,
  .search-result:hover {
    background-color: variables.$background-auxiliary;

    .search-result-title {
      color: variables.$link-hover;
    }
  
    .search-result-excerpt {
      color: variables.$color-pronounced;
    }
  }
}

// remove borders when results get displayed
.remove-bottom-border {
  border-color: variables.$border-active;
  border-bottom-right-radius: 0;
  border-bottom-left-radius: 0;
  border-bottom-width: 0.5px;
}

.remove-top-border {
  border-top-right-radius: 0;
  border-top-left-radius: 0;
  border-top-width: 0.5px;
}

// Menu

.menu {
  @include layouts.flex($justify: flex-end);
  @include layouts.vspace(variables.$expanse-md);
  padding-right: variables.$expanse-md;
  background-color: variables.$background-pronounced;
  font-size: variables.$font-size-sm;

  & > a {
    margin-left: variables.$gap-rg;
  }
}

.expandable-menu {
  @include layouts.flex($wrap: nowrap, $align: flex-end);
  flex-direction: column;
  position: absolute;
  z-index: 5;
  top: calc(3.75rem + 2.5vw);
  height: 5.7em;
  background-color: variables.$background-muted;
  @include layouts.vspace(variables.$gap-rg);
  @include layouts.hspace(variables.$gap-lg);
  border: 1.5px solid variables.$border;
  border-radius: variables.$radius;
  visibility: visible;

  & > * {
    width: 100%;
    text-align: end;
  }
}

// Hero

.hero-media,
.hero-content {
  @include layouts.vspace(variables.$expanse-md);
}

$hero-media-size: calc(5rem + 10vw);

.hero-media {
  @include layouts.flex($justify: flex-end);
  @include layouts.hspace(variables.$expanse-md);

  @include queries.within-tab-landscape {
    justify-content: flex-start;
  }
}

.hero-image {
  @include layouts.flex;
  background-image: url('/assets/images/pattern.svg');
  background-repeat: repeat-x;
  height: $hero-media-size;
  width: $hero-media-size;
}

.hero-content {
  @include layouts.flex($align: flex-start);
  flex-direction: column;

  @include queries.within-tab-landscape {
    @include layouts.hspace(variables.$expanse-md);
    padding-top: 0;
  }
}

// Metadata

.metadata {
  @include layouts.flex($justify: flex-start);
  font-size: variables.$font-size-sm;

  & > * {
    margin-bottom: variables.$gap-xs;
  }
}

.metadata-author {
  @include layouts.flex($justify: flex-start);

  img { 
    height: variables.$gfx-rg;
    width: variables.$gfx-rg;
    border-radius: 50%;
    margin-right: variables.$gap-xs;
  }
}

$label-size: calc(1.75em + 3vw);

.metadata-labels {
  @include layouts.flex;

  .label {
    max-height: $label-size;
    max-width: $label-size;
    padding: 0.3em;
  }
}

.metadata-media {
  height: 70%;
  width: 70%;
  border-radius: 50%;
}

// Footer

.footer {
  @include layouts.flex;
  @extend .container;
  font-size: variables.$font-size-sm;
  background-color: variables.$background-muted;

  @include queries.within-tab-landscape {
    justify-content: flex-start;
    flex-direction: row-reverse;
  }

  .grid-sm {
    width: 100%;
    @include layouts.vspace(variables.$expanse-md);
  }

  .is-lead {
    font-weight: variables.$weight-semibold;
    margin-bottom: variables.$gap-rg;
  }

  .copyright {
    display: flex;
    width: 100%;
    justify-content: space-between;
    align-items: flex-end;
    margin-bottom: variables.$expanse-md;

    @include queries.phone {
      flex-direction: column-reverse;
      align-items: flex-start;
    }
  }
}

// SVG Icons

.icon {
  stroke: currentColor;
  stroke-width: 1.5px;
  height: variables.$gfx-sm;
  width: variables.$gfx-sm;
}

.icon-sm {
  @extend .icon;
  stroke-width: 2px;
  height: variables.$gfx-xs;
  width: variables.$gfx-xs;
}

// Hide / show utilities

.is-visible {
  @include mixins.hide(false);
}

.is-hidden {
  @include mixins.hide;
}

.is-hidden-on-phone {
  @include queries.within-tab-landscape {
    @include mixins.hide;
  }
}

.logo_svg__is-hidden-on-phone {
  @media screen and (min-width: variables.$breakpoint-md) and (max-width: variables.$breakpoint-lg)  {
    @include mixins.hide;
  }
}

// Active links

.active {
  font-weight: variables.$weight-bold;
}

// Separator

.separator {
  opacity: variables.$opacity;
  padding-right: variables.$gap-xs;
  padding-left: variables.$gap-xs;

  &::after {
    content: variables.$indicator-separator;
  }
}

// Layout and Spacing

.is-separated {
  margin-right: variables.$gap-sm;
}

.is-start-flexed {
  @include layouts.flex($justify: flex-start);
}

// Typography

.title {
  font-size: variables.$font-size-xl;
  color: variables.$text;
}

.subtitle {
  font-size: variables.$font-size-md;
  color: variables.$text-muted;
}

.is-primary {
  color: variables.$link;
  border-color: variables.$link;
}

.is-warning {
  $red: hsl(350, 90%, 45%);
  color: $red;
  border-color: $red;
}

.is-muted {
  color: variables.$text-muted;
}
